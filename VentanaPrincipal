import javax.sound.sampled.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;

public class VentanaPrincipal extends JFrame {

    private Clip audioClip;

    public VentanaPrincipal(String nombreJugador) {
        setTitle("Ventana Principal - Poob vs Zombis");
        setSize(800, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // Cargar la imagen de fondo
        ImageIcon backgroundImage = new ImageIcon("src\\IMG\\VentanaPrin.png");

        // Panel personalizado para el fondo
        JPanel fondoPanel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(backgroundImage.getImage(), 0, 0, getWidth(), getHeight(), this);
            }
        };
        fondoPanel.setLayout(new BorderLayout());

        // Panel derecho para los botones
        JPanel rightPanel = new JPanel();
        rightPanel.setLayout(new BorderLayout());
        rightPanel.setOpaque(false);

        // Panel central dentro de rightPanel para los botones AVENTURA y SUPERVIVENCIA
        JPanel modePanel = new JPanel();
        modePanel.setLayout(new BoxLayout(modePanel, BoxLayout.Y_AXIS));
        modePanel.setOpaque(false);

        // Botón MODOS DE JUEGO
        JButton MODOSDEJUEGOButton = new JButton("MODOS DE JUEGO");
        MODOSDEJUEGOButton.setPreferredSize(new Dimension(150, 50));
        MODOSDEJUEGOButton.setAlignmentX(Component.CENTER_ALIGNMENT);
        MODOSDEJUEGOButton.setForeground(Color.WHITE);
        MODOSDEJUEGOButton.setContentAreaFilled(false);
        MODOSDEJUEGOButton.setBorderPainted(false);
        MODOSDEJUEGOButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (audioClip != null && audioClip.isRunning()) {
                    audioClip.stop(); // Detener la música antes de abrir SeleccionNivel
                }
                dispose(); // Cerrar la ventana actual
                new SeleccionModo(VentanaPrincipal.this); // Abrir SeleccionNivel y pasar la referencia de esta ventana
            }
        });

        // Botón SUPERVIVENCIA
        JButton supervivenciaButton = new JButton("SUPERVIVENCIA");
        supervivenciaButton.setPreferredSize(new Dimension(150, 50));
        supervivenciaButton.setAlignmentX(Component.CENTER_ALIGNMENT);
        supervivenciaButton.setForeground(Color.WHITE);
        supervivenciaButton.setContentAreaFilled(false);
        supervivenciaButton.setBorderPainted(false);

        // Botón SALIR
        JButton salirButton = new JButton("SALIR");
        salirButton.setPreferredSize(new Dimension(150, 50));
        salirButton.setAlignmentX(Component.CENTER_ALIGNMENT);
        salirButton.setForeground(Color.WHITE);
        salirButton.setContentAreaFilled(false);
        salirButton.setBorderPainted(false);
        salirButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (audioClip != null && audioClip.isRunning()) {
                    audioClip.stop();
                }
                System.exit(0);
            }
        });

        // Añadir paneles y fondo a la ventana
        modePanel.add(Box.createVerticalGlue());
        modePanel.add(MODOSDEJUEGOButton);
        modePanel.add(Box.createVerticalStrut(20));
        modePanel.add(supervivenciaButton);
        modePanel.add(Box.createVerticalGlue());
        rightPanel.add(modePanel, BorderLayout.CENTER);
        rightPanel.add(salirButton, BorderLayout.SOUTH);
        fondoPanel.add(rightPanel, BorderLayout.EAST);

        // Panel de bienvenida inclinado a la izquierda
        JPanel welcomePanel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Graphics2D g2d = (Graphics2D) g;
                g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.6f));
                g2d.rotate(Math.toRadians(-10), getWidth() / 2, getHeight() / 2);
                g2d.setColor(new Color(0, 0, 0, 150));
                g2d.fillRoundRect(10, 10, 200, 100, 15, 15);
                g2d.rotate(Math.toRadians(10), getWidth() / 2, getHeight() / 2);
                g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1f));
                g2d.setColor(Color.WHITE);
                g2d.setFont(new Font("Arial", Font.BOLD, 16));
                g2d.drawString("Bienvenido, " + nombreJugador + "!", 30, 60);
            }
        };
        welcomePanel.setPreferredSize(new Dimension(250, 150));
        welcomePanel.setOpaque(false);
        fondoPanel.add(welcomePanel, BorderLayout.WEST);

        // Añadir fondoPanel al JFrame
        add(fondoPanel);

        // Reproducir la música de fondo
        reproducirMusica("src\\sounds\\Theme.wav");

        setVisible(true);
    }

    private void reproducirMusica(String rutaArchivo) {
        try {
            File archivoAudio = new File(rutaArchivo);
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(archivoAudio);
            audioClip = AudioSystem.getClip();
            audioClip.open(audioStream);
            audioClip.loop(Clip.LOOP_CONTINUOUSLY);
            audioClip.start();
        } catch (UnsupportedAudioFileException | IOException | LineUnavailableException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "No se pudo cargar el archivo de audio.");
        }
    }
}

